<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.AccountInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.AccountInfo" >
    <constructor >
      <idArg column="account_info_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="category_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="item_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="account_info_code" jdbcType="INTEGER" javaType="java.lang.String" />
      <arg column="account_img" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pre_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="account_rel_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="account_info_dec" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="check_user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="last_edit_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    account_info_id, category_name, user_id, item_id,account_info_code, account_img, pre_price, account_rel_price,
    account_info_dec, state, check_user_name, create_time, last_edit_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_info
    where account_info_id = #{accountInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_info
    where account_info_id = #{accountInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="account_info_id" parameterType="com.pojo.AccountInfo" >
    insert into account_info (account_info_id, category_name, user_id, 
      item_id, account_info_code, account_img, pre_price,
      account_rel_price, account_info_dec, state, 
      check_user_name, create_time, last_edit_time
      )
    values (#{accountInfoId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{itemId,jdbcType=INTEGER},#{accountInfoCode,jdbcType=VARCHAR}, #{accountImg,jdbcType=VARCHAR}, #{prePrice,jdbcType=DECIMAL},
      #{accountRelPrice,jdbcType=DECIMAL}, #{accountInfoDec,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{checkUserName,jdbcType=VARCHAR}, now(),now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.AccountInfo" >
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountInfoId != null" >
        account_info_id,
      </if>
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="accountInfoCode != null" >
        account_info_code,
      </if>
      <if test="accountImg != null" >
        account_img,
      </if>
      <if test="prePrice != null" >
        pre_price,
      </if>
      <if test="accountRelPrice != null" >
        account_rel_price,
      </if>
      <if test="accountInfoDec != null" >
        account_info_dec,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="checkUserName != null" >
        check_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastEditTime != null" >
        last_edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountInfoId != null" >
        #{accountInfoId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="accountInfoCode != null" >
        #{accountInfoCode,jdbcType=VARCHAR},
      </if>
      <if test="accountImg != null" >
        #{accountImg,jdbcType=VARCHAR},
      </if>
      <if test="prePrice != null" >
        #{prePrice,jdbcType=DECIMAL},
      </if>
      <if test="accountRelPrice != null" >
        #{accountRelPrice,jdbcType=DECIMAL},
      </if>
      <if test="accountInfoDec != null" >
        #{accountInfoDec,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="checkUserName != null" >
        #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.AccountInfo" >
    update account_info
    <set >
      <if test="categoryName != null" >
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="accountInfoCode != null" >
        account_info_code = #{accountInfoCode,jdbcType=VARCHAR},
      </if>
      <if test="accountImg != null" >
        account_img = #{accountImg,jdbcType=VARCHAR},
      </if>
      <if test="prePrice != null" >
        pre_price = #{prePrice,jdbcType=DECIMAL},
      </if>
      <if test="accountRelPrice != null" >
        account_rel_price = #{accountRelPrice,jdbcType=DECIMAL},
      </if>
      <if test="accountInfoDec != null" >
        account_info_dec = #{accountInfoDec,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="checkUserName != null" >
        check_user_name = #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>

        last_edit_time = now(),

    </set>
    where account_info_id = #{accountInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.AccountInfo" >
    update account_info
    set category_name = #{categoryName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      account_info_code = #{accountInfoCode,jdbcType=VARCHAR},
      account_img = #{accountImg,jdbcType=VARCHAR},
      pre_price = #{prePrice,jdbcType=DECIMAL},
      account_rel_price = #{accountRelPrice,jdbcType=DECIMAL},
      account_info_dec = #{accountInfoDec,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      check_user_name = #{checkUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP}
    where account_info_id = #{accountInfoId,jdbcType=INTEGER}
  </update>

  <select id="selectUncheckListNotItemId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from account_info
    where item_id is NULL
    and state = 0
  </select>

  <select id="selectUncheckList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from account_info
    where item_id = #{itemId}
    and state = 0
  </select>

  <select id="selectCheckList" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from account_info
    where item_id = #{itemId}
    and state = 1
    and user_id = #{userId}
    and 0 > account_rel_price
  </select>

  <select id="selectCheckListNotItemId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from account_info
    where item_id is NULL
    and state = 1
    and user_id = #{userId}
    and 0 > account_rel_price
  </select>

  <select id="selectItemAccountList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   SELECT
   <include refid="Base_Column_List"/>
    from account_info
    where item_id = #{itemId}
    and state = 1
  </select>

  <select id="selectAccountList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from account_info
    where item_id is NULL
    and state = 1
  </select>

  <select id="selectCountByUserIdCheck" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*)
    from account_info
    where user_id = #{userId}
    and state = 1
    and 0 > account_rel_price
  </select>

  <select id="selectCountByUserIdUncheck" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(*)
    from account_info
    where check_user_name = #{checkUserName}
    and state = 0
  </select>

  <select id="selectAllPayAccountDay" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and 0 > account_rel_price
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllIncomeAccountDay" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and account_rel_price > 0
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllPayAccountMonth" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and 0 > account_rel_price
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>

  <select id="selectAllIncomeAccountMonth" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and  account_rel_price > 0
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>



  <select id="selectAllPayAccountDayByItemId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id = #{itemId}
    and 0 > account_rel_price
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllIncomeAccountDayByItemId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id = #{itemId}
    and account_rel_price > 0
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllPayAccountMonthByItemId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id = #{itemId}
    and 0 > account_rel_price
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>

  <select id="selectAllIncomeAccountMonthByItemId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id = #{itemId}
    and  account_rel_price > 0
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>



  <select id="selectAllPayAccountDayByUserId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and user_id = #{user_id}
    and 0 > account_rel_price
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllIncomeAccountDayByUserId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and user_id = #{user_id}
    and account_rel_price > 0
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllPayAccountMonthByUserId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and user_id = #{user_id}
    and 0 > account_rel_price
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>

  <select id="selectAllIncomeAccountMonthByUserId" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and user_id = #{user_id}
    and  account_rel_price > 0
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>




  <select id="selectAllPayAccountDayCompany" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id is null
    and 0 > account_rel_price
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllIncomeAccountDayCompany" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id is null
    and account_rel_price > 0
    and DATEDIFF(last_edit_time,NOW()) = 0
  </select>

  <select id="selectAllPayAccountMonthCompany" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id is null
    and 0 > account_rel_price
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>

  <select id="selectAllIncomeAccountMonthCompany" resultType="java.math.BigDecimal">
    select
    sum(account_rel_price)
    from account_info
    where state = 1
    and item_id is null
    and  account_rel_price > 0
    and 0 >= DATEDIFF(last_edit_time,NOW())
    and DATEDIFF(last_edit_time,NOW()) >= -30
  </select>

  <select id="selectByTimeNotItemId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from account_info
    where last_edit_time > #{startTime}
    and #{endTime} > last_edit_time
    and state = 1
    and item_id is NULL
    ORDER BY last_edit_time DESC
  </select>

  <select id="selectByTimeAndItemId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from account_info
    where last_edit_time > #{startTime}
    and #{endTime} > last_edit_time
    and state = 1
    and state = #{itemId}
    ORDER BY last_edit_time DESC
  </select>


</mapper>